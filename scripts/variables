#!/bin/bash

_puid=$(printenv PUID)
_pgid=$(printenv PGID)

cloud_encrypt_dir="/cloud-encrypt"
cloud_decrypt_dir="/cloud-decrypt"

local_decrypt_dir="/local-decrypt"
local_media_dir="/local-media"

rclone_config="--config=\"/config/rclone.conf\""
rclone_logs="--log-file=/logs/rclone-gdrive.log --log-level DEBUG"
rclone_options="${rclone_config} ${rclone_logs} --buffer-size $(printenv BUFFER_SIZE) --checkers $(printenv CHECKERS)"
#rclone_mount_options="--allow-non-empty --allow-other --uid ${_puid:-911} --gid ${_pgid:-911} --umask 002 --size-only --dir-cache-time 2m --vfs-cache-max-age 72h --vfs-read-chunk-size 32M --vfs-read-chunk-size-limit 5G --drive-chunk-size 32M"
rclone_mount_options="${rclone_options}"
rclone_mount_options_w="${rclone_mount_options} --vfs-cache-mode writes"

ufs_options="-o defaults,sync_read,allow_other,direct_io,use_ino,func.getattr=newest,nonempty,security_capability=false,xattr=nosys,category.create=ff,minfreespace=5G,umask=002,uid=${_puid:-911},gid=${_puid:-911},fsname=mergerfs"

log_dir="/logs"
if [ ! -d "${log_dir}" ]; then
	mkdir -p "${log_dir}"
fi

rclone_cloud_endpoint=$(printenv RCLONE_CLOUD_ENDPOINT | tr -d '"' | tr -d "'")
rclone_cloud_crypt_endpoint=$(printenv RCLONE_CLOUD_CRYPT_ENDPOINT | tr -d '"' | tr -d "'")