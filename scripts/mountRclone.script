#!/bin/ash
###############################################################################
# mount.remote - A script to mount GDrive remote for use with Plex
###############################################################################
# CONFIGURATION
###############################################################################
# shellcheck source=config

. "/bin/config"
. "/bin/variables"
###############################################################################
# FUNCTIONS
###############################################################################
mount_gdrive () {
	# Mount PronVR if not already mounted.
	if [ $(ps -ef | grep "${rclone_endpoint_1}" | grep -v "grep" | wc -l) = "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_dir_1}"
		echo rclone mount ${rclone_mount_options} ${rclone_endpoint_1} ${cloud_dir_1} 
		rclone mount ${rclone_mount_options} ${rclone_endpoint_1} ${cloud_dir_1} &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${rclone_endpoint_1} already mounted."
	fi
		# Mount PronVR if not already mounted.
	if [ $(ps -ef | grep "${rclone_endpoint_2}" | grep -v "grep" | wc -l) = "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_dir_2}"
		echo rclone mount ${rclone_mount_options} ${rclone_endpoint_2} ${cloud_dir_2} 
		rclone mount ${rclone_mount_options} ${rclone_endpoint_2} ${cloud_dir_2} &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${rclone_endpoint_2} already mounted."
	fi
		# Mount PronVR if not already mounted.
	if [ $(ps -ef | grep "${rclone_endpoint_3}" | grep -v "grep" | wc -l) = "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_dir_3}"
		echo rclone mount ${rclone_mount_options} ${rclone_endpoint_3} ${cloud_dir_3} 
		rclone mount ${rclone_mount_options} ${rclone_endpoint_3} ${cloud_dir_3} &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${rclone_endpoint_3} already mounted."
	fi
	# Mount GD if not already mounted.
	if [ $(ps -ef | grep "${rclone_bounty1342_endpoint}" | grep -v "grep" | wc -l) = "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_bounty1342_dir}"
		echo rclone mount ${rclone_mount_options} ${rclone_bounty1342_endpoint} ${cloud_bounty1342_dir} 
		rclone mount ${rclone_mount_options} ${rclone_bounty1342_endpoint} ${cloud_bounty1342_dir} &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${cloud_bounty1342_dir} already mounted."
	fi
	# Mount GD if not already mounted.
	if [ $(ps -ef | grep "${rclone_cloud_endpoint}" | grep -v "grep" | wc -l) = "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_encrypt_dir}"
		echo rclone mount ${rclone_mount_options} ${rclone_cloud_endpoint} ${cloud_encrypt_dir} 
		rclone mount ${rclone_mount_options} ${rclone_cloud_endpoint} ${cloud_encrypt_dir} &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${rclone_bounty1342_endpoint} already mounted."
	fi
	# Mount GD Crypt if not already mounted.
	if [ $(ps -ef | grep "${rclone_cloud_crypt_endpoint}" | grep -v "grep" | wc -l) = "0" ] && [ "$(printenv ENCRYPT_MEDIA)" = "1" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_decrypt_dir}"
		echo rclone mount ${rclone_mount_options} ${rclone_cloud_crypt_endpoint} ${cloud_decrypt_dir} 
		rclone mount ${rclone_mount_options} ${rclone_cloud_crypt_endpoint} ${cloud_decrypt_dir} &
	else
		if [ "$(printenv ENCRYPT_MEDIA)" = "1" ]; then
				echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${cloud_decrypt_dir} already mounted."
		fi
	fi
	
	# Mount GD Crypt if not already mounted.
	if [ $(ps -ef | grep "${rclone_perso_endpoint}" | grep -v "grep" | wc -l) = "0" ] && [ "$(printenv ENCRYPT_MEDIA)" = "1" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting Google Drive mountpoint: ${cloud_perso_dir}"
		echo rclone mount ${rclone_mount_options} ${rclone_perso_endpoint} ${cloud_perso_dir} 
		rclone mount ${rclone_mount_options} ${rclone_perso_endpoint} ${cloud_perso_dir} &
	else
		if [ "$(printenv ENCRYPT_MEDIA)" = "1" ]; then
				echo "[ $(date $(printenv DATE_FORMAT)) ] Google Drive mountpoint: ${cloud_perso_dir} already mounted."
		fi
	fi
}

mount_union () {
	# Make sure combined plex media directory exists.
	if [ ! -d "${local_media_dir}" ]; then
		mkdir -p "${local_media_dir}"
	fi

	sleep 5
	while [ -z "$(ls -A ${cloud_decrypt_dir})" ]
	do
		echo "Waiting for mount ${cloud_decrypt_dir} ..."
		sleep 30
	done


	# Mount plex media directory if not already mounted.
	if [ $(ps -ef | grep "mergerfs" | grep -v "grep" | wc -l) = "0" ]; then
		ufs_mounts="${local_decrypt_dir}=RW:${cloud_decrypt_dir}=RW"

		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting mergerfs: mergerfs $ufs_options ${ufs_mounts} ${local_media_dir}"
		mergerfs $ufs_options "${ufs_mounts}" "${local_media_dir}"
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Union mountpoint: ${local_media_dir} already mounted."
	fi
}

###############################################################################

if pidof -o %PPID -s "$(basename "$0")"; then
	echo "[ $(date $(printenv DATE_FORMAT)) ] Mount already in progress. Aborting."
else
	echo "[ $(date $(printenv DATE_FORMAT)) ] Mount in progress. Starting."
	mount_gdrive
	mount_union
	echo "[ $(date $(printenv DATE_FORMAT)) ] Mount is done. Done."
fi

exit 0
